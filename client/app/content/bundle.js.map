{"version":3,"sources":["app.js","components/sign-up.js","notes/notes.js","users/users.js","services/notes-service.js","services/users-service.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\n  let notelyApp = angular.module('notely', [\n    'ui.router',\n    'notely.notes'\n  ]);\n\n  function notelyConfig($urlRouterProvider) {\n    $urlRouterProvider.otherwise('/notes/');\n  }\n\n  notelyConfig.$inject = ['$urlRouterProvider'];\n  notelyApp.config(notelyConfig);\n\n  notelyApp.constant('API_BASE', 'http://localhost:3030/');\n})();\n","angular.module('notely')\n  .directive('signUp', ['UsersService', (UsersService) => {\n\n    class SignUpController {\n      constructor() {\n        this.user = {};\n      }\n      submit() {\n        UsersService.create(this.user);\n      }\n    }\n\n    return {\n      scope: {},\n      controller: SignUpController,\n      controllerAs: 'ctrl',\n      templateUrl: '/components/sign-up.html'\n    };\n  }]);\n","(function() {\n  angular.module('notely.notes', [\n    'ui.router',\n    'textAngular'\n  ])\n  .config(notesConfig);\n\n  notesConfig.$inject = ['$stateProvider'];\n  function notesConfig($stateProvider) {\n    $stateProvider\n\n      .state('notes', {\n        url: '/notes',\n        templateUrl: '/notes/notes.html',\n        controller: NotesController,\n        resolve: {\n          notesLoaded: function(NotesService) {\n            return NotesService.fetch();\n          }\n        }\n      })\n\n      .state('notes.form', {\n        url: '/:noteId',\n        templateUrl: '/notes/notes-form.html',\n        controller: NotesFormController\n      });\n  }\n\n  NotesController.$inject = ['$scope', '$state', 'NotesService'];\n  function NotesController($scope, $state, NotesService) {\n    $scope.notes = NotesService.getNotes();\n    $state.go('notes.form');\n  }\n\n  NotesFormController.$inject = ['$scope', '$state', 'NotesService'];\n  function NotesFormController($scope, $state, NotesService) {\n    $scope.note = NotesService.findById($state.params.noteId);\n    $scope.save = function() {\n      if ($scope.note._id) {\n        NotesService.update($scope.note);\n      }\n      else {\n        NotesService.create($scope.note).then(function(response) {\n          $state.go('notes.form', { noteId: response.data.note._id });\n        });\n      }\n    };\n    $scope.delete = function() {\n      NotesService.delete($scope.note).then(function() {\n        $state.go('notes.form', { noteId: undefined });\n      });\n    };\n  }\n})();\n","{\n  let usersConfig = function($stateProvider) {\n    $stateProvider\n      .state('sign-up', {\n        url: '/sign-up',\n        template: '<sign-up></sign-up>'\n      });\n  };\n  usersConfig.$inject = ['$stateProvider'];\n\n  angular.module('notely')\n    .config(usersConfig);\n}\n","(function() {\n  angular.module('notely')\n    .service('NotesService', NotesService);\n\n  NotesService.$inject = ['$http', 'API_BASE'];\n  function NotesService($http, API_BASE) {\n    var _this = this;\n    _this.notes = [];\n\n    _this.fetch = function() {\n      return $http.get(`${API_BASE}notes`)\n        .then(\n          // Success\n          function(response) {\n            _this.notes = response.data;\n          },\n\n          // Failure\n          function(response) {\n            console.log(`aww, snap: ${response}`);\n          }\n        );\n    };\n\n    _this.getNotes = function() {\n      return _this.notes;\n    };\n\n    _this.create = function(note) {\n      var creationPromise = $http.post(`${API_BASE}notes`, {\n        note: note\n      });\n\n      creationPromise.then(function(response) {\n        _this.notes.unshift(response.data.note);\n      });\n\n      return creationPromise;\n    };\n\n    _this.update = function(note) {\n      return $http.put(`${API_BASE}notes/${note._id}`, {\n        note: {\n          title: note.title,\n          body_html: note.body_html\n        }\n      }).then(function(response) {\n        _this.replaceNote(response.data.note);\n      });\n    };\n\n    _this.delete = function(note) {\n      return $http.delete(`${API_BASE}notes/${note._id}`\n      ).then(function(response) {\n        _this.removeNote(response.data.note);\n      });\n    };\n\n    _this.removeNote = function(note) {\n      for (var i = 0; i < _this.notes.length; i++) {\n        if (_this.notes[i]._id === note._id) {\n          _this.notes.splice(i, 1);\n          return;\n        }\n      }\n    };\n\n    _this.replaceNote = function(updatedNote) {\n      for (var i = 0; i < _this.notes.length; i++) {\n        if (_this.notes[i]._id === updatedNote._id) {\n          _this.notes[i] = updatedNote;\n          return;\n        }\n      }\n    };\n\n    _this.findById = function(noteId) {\n      for (var i = 0; i < _this.notes.length; i++) {\n        // If the IDs match, return the current note\n        if (_this.notes[i]._id === noteId) {\n          return angular.copy(_this.notes[i]);\n        }\n      }\n      return {};\n    };\n  }\n}());\n","angular.module('notely')\n  .service('UsersService', ['$http', 'API_BASE', ($http, API_BASE) => {\n\n    class UsersService {\n      create(user) {\n        let userPromise = $http.post(`${API_BASE}users`, {\n          user: user\n        });\n        userPromise.then((response) => {\n          console.log(response.data.user);\n        });\n        return userPromise;\n      }\n    }\n    return new UsersService();\n\n  }]);\n"],"sourceRoot":"/source/"}